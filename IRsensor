/* 
 * File:MAIN.c
 * Author: SURINDER  MEHTOT
 *
 *  Created on March 5, 2020, 12:17 PM
 */

#include <stdio.h>
#include <stdlib.h>


#include "LCD.h"

#define RS RD2   //LCD  REGISTER PIN CONNECTED AT RD2
#define EN RD3    //LCD  ENABLE PIN CONNECTED AT RD3
#define D4 RD4    //LCD  DATA PIN 4 CONNECTED AT RD4
#define D5 RD5    //LCD  DATA PIN 5 CONNECTED AT RD5
#define D6 RD6    //LCD  DATA PIN 6 CONNECTED AT RD6
#define D7 RD7    //LCD  DATA PIN 7 CONNECTED AT RD7
#define SW RB0    //FIRST SENSOR CONNECTED AT ENTRY DEFINED AS SW AT RB0 PIN
#define SW1 RB1   //SECOND SENSOR CONNECTED AT SPOT 1 DEFINED AS SW1   AT RB1 PIN
#define SW2 RB2   //THIRD SENSOR CONNECTED AT SPOT 2 DEFINED AS SW2     AT RB2 PIN
#define SW3 RB3    //FOURTH SENSOR CONNECTED AT SPOT 3 DEFINED AS SW3    AT RB3 PIN
#define SW4 RB4   //FIFTH SENSOR CONNECTED AT SPOT 4 DEFINED AS SW4       AT RB4 PIN


void Lcd_SetBit(char data_bit)        //Based on the Hex value Set the Bits of the Data Lines
{
    if(data_bit& 1) 
        D4 = 1;
    else
        D4 = 0;

    if(data_bit& 2)
        D5 = 1;
    else
        D5 = 0;

    if(data_bit& 4)
        D6 = 1;
    else
        D6 = 0;

    if(data_bit& 8) 
        D7 = 1;
    else
        D7 = 0;
}

void Lcd_Cmd(char a)
{
    RS = 0;           
    Lcd_SetBit(a); //Incoming Hex value
    EN  = 1;         
        __delay_ms(4);
        EN  = 0;         
}

Lcd_Clear()
{
    Lcd_Cmd(0); //Clear the LCD
    Lcd_Cmd(1); //Move the curser to first position
}

void Lcd_Set_Cursor(char a, char b)
{
    char temp,z,y;
    if(a== 1)
    {
      temp = 0x80 + b - 1; //80H is used to move the curser
        z = temp>>4; //Lower 8-bits
        y = temp & 0x0F; //Upper 8-bits
        Lcd_Cmd(z); //Set Row
        Lcd_Cmd(y); //Set Column
    }
    else if(a== 2)
    {
        temp = 0xC0 + b - 1;
        z = temp>>4; //Lower 8-bits
        y = temp & 0x0F; //Upper 8-bits
        Lcd_Cmd(z); //Set Row
        Lcd_Cmd(y); //Set Column
    }
}

void Lcd_Start()
{
  Lcd_SetBit(0x00);
  for(int i=1065244; i<=0; i--)  NOP();  
  Lcd_Cmd(0x03);
    __delay_ms(5);
  Lcd_Cmd(0x03);
    __delay_ms(11);
  Lcd_Cmd(0x03); 
  Lcd_Cmd(0x02); //02H is used for Return home -> Clears the RAM and initializes the LCD
  Lcd_Cmd(0x02); //02H is used for Return home -> Clears the RAM and initializes the LCD
  Lcd_Cmd(0x08); //Select Row 1
  Lcd_Cmd(0x00); //Clear Row 1 Display
  Lcd_Cmd(0x0C); //Select Row 2
  Lcd_Cmd(0x00); //Clear Row 2 Display
  Lcd_Cmd(0x06);
}

void Lcd_Print_Char(char data)  //Send 8-bits through 4-bit mode
{
   char Lower_Nibble,Upper_Nibble;
   Lower_Nibble = data&0x0F;
   Upper_Nibble = data&0xF0;
   RS = 1;             // => RS = 1
   Lcd_SetBit(Upper_Nibble>>4);             //Send upper half by shifting by 4
   EN = 1;
   for(int i=2130483; i<=0; i--)  NOP(); 
   EN = 0;
   Lcd_SetBit(Lower_Nibble); //Send Lower half
   EN = 1;
   for(int i=2130483; i<=0; i--)  NOP();
   EN = 0;
}

void Lcd_Print_String(char *a)
{
    int i;
    for(i=0;a[i]!='\0';i++)
       Lcd_Print_Char(a[i]);  //Split the string using pointers and call the Char function 
}

int main()
{
    unsigned int a;
    TRISD = 0x00;
    TRISB =0xff;
    PORTB=0xff;
    Lcd_Start();
    while(1)
    {
        if(SW == 0)
        {
        Lcd_Clear();
        Lcd_Set_Cursor(1,1);
        Lcd_Print_String("CAR DETECTED");
        Lcd_Set_Cursor(2,1);
        Lcd_Print_String("AT ENTRY");
        __delay_ms(2000);
        }
        else if(SW == 1)
        {
           Lcd_Clear();
        Lcd_Set_Cursor(1,1);
        Lcd_Print_String("NO CAR");
        Lcd_Set_Cursor(2,1);
        Lcd_Print_String("AT ENTRY!");
        __delay_ms(2000); 
        }
        else if(SW1 == 0)
        {
        Lcd_Clear();
        Lcd_Set_Cursor(1,1);
        Lcd_Print_String("CAR DETECTED");
        Lcd_Set_Cursor(2,1);
        Lcd_Print_String("AT SPOT 1");
        __delay_ms(2000);
        }
        else if(SW1 == 1)
        {
           Lcd_Clear();
        Lcd_Set_Cursor(1,1);
        Lcd_Print_String("NO CAR");
        Lcd_Set_Cursor(2,1);
        Lcd_Print_String("AT SPOT 1");
        __delay_ms(2000); 
        }
        else if(SW2 == 0)
        {
        Lcd_Clear();
        Lcd_Set_Cursor(1,1);
        Lcd_Print_String("CAR DETECTED");
        Lcd_Set_Cursor(2,1);
        Lcd_Print_String("AT SPOT 2");
        __delay_ms(2000);
        }
        else if(SW2 == 1)
        {
           Lcd_Clear();
        Lcd_Set_Cursor(1,1);
        Lcd_Print_String("NO CAR");
        Lcd_Set_Cursor(2,1);
        Lcd_Print_String("AT SPOT 2");
        __delay_ms(2000); 
        }
      }
    return 0;
    }
 

